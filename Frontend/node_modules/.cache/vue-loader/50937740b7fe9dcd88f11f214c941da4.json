{"remainingRequest":"/Users/user/Documents/TestProject/Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/user/Documents/TestProject/Frontend/src/views/users/UpdatePassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/user/Documents/TestProject/Frontend/src/views/users/UpdatePassword.vue","mtime":1647724083233},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport UserActions from '@/components/actions/User.vue'\nimport auth from '@/services/authentication'\nimport { mapGetters } from 'vuex'\nexport default {\n  name: 'home',\n  data () {\n    return {\n      emailSent: false,\n      firstTime: false,\n      password: '',\n      confirm_password: ''\n    }\n  },\n  components: {\n    UserActions\n  },\n  mounted() {\n    this.checkFisrtTime()\n  },\n  computed: {\n    ...mapGetters('Auth',['authUser']),\n  },\n  methods: {\n    checkFisrtTime: function() {\n        if (this.$route.params.token === 'ft') {\n          this.firstTime = true\n        }\n    },\n    async requestToken(){\n        let payload = {\n            \"email\": this.authUser.username\n        }\n        try {\n            await auth.resetPassword(payload)\n            this.emailSent = true\n            this.$swal({\n            icon: 'success',\n            text: 'Email sent',\n            showConfirmButton: false,\n            });\n        } catch (err) {\n            let error = Object.entries(err.response.data)\n            this.loading = !this.loading\n            this.$swal({\n            icon: 'error',\n            title: 'Oops...',\n            text: error,\n            showConfirmButton: false,\n            });\n        } \n    },\n    async setNewPassword(){\n        if (this.password !== this.confirm_password) {\n            this.password = ''\n            this.confirm_password = ''\n            this.$swal({\n                icon: 'error',\n                text: 'Passwords do not match',\n                showConfirmButton: false,\n            });\n            return null\n\n        }\n\n        let payload = {\n            \"password\": this.password,\n            \"token\": this.$route.params.token\n        }\n\n        try {\n            await auth.setPassword(payload)\n            this.$swal({\n                icon: 'success',\n                text: 'Password Updated. Please login again.',\n                showConfirmButton: false,\n            });\n            this.$store.dispatch('Auth/logout')\n            this.$store.dispatch('User/logout')\n            this.$router.push('/login')\n        } catch (err) {\n            let error = Object.entries(err.response.data)\n            this.$swal({\n            icon: 'error',\n            title: 'Oops...',\n            text: error,\n            showConfirmButton: false,\n            });\n        } \n    },\n  }\n}\n",{"version":3,"sources":["UpdatePassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UpdatePassword.vue","sourceRoot":"src/views/users","sourcesContent":["<template>\n  <div class=\"home page-container\">\n    <div class=\"page\">\n      <h4 class=\"page__title\">Security</h4>\n      <p class=\"page__desc\">Update Password</p>\n      <div class=\"page__content\">\n        <span v-if=\"firstTime === true\">\n          <br>\n          <br>\n          <div class=\"page__content--row\">\n            <p class=\"element\">\n                <span class=\"element__title\">Welcome to eProcure. Please reset your password to proceed.</span>\n            </p>\n          </div>\n          <div class=\"page__content--row\" v-if=\"emailSent === false\">\n            <p class=\"element\">\n                <span class=\"element__title\">Get reset password link on your email - </span>\n                <span class=\"element__content link\" @click=\"requestToken()\">Get link</span>\n            </p>\n          </div>\n          <div class=\"page__content--row\" v-else>\n            <p class=\"element\">\n                <span class=\"element__title\">\n                  <strong>Email has been sent, please check your email. </strong>\n                  <span class=\"element__content link\" @click=\"requestToken()\"> Resend Email</span>\n                </span>\n            </p>\n          </div>\n        </span>\n        <div v-else class=\"form-container\">\n          <form v-on:submit.prevent=\"setNewPassword()\" class=\"form\">\n            <p class=\"page__content--sub-title\">Set new password</p>\n            <div class=\"form-control\">\n              <label class=\"label\" for=\"\">Password</label>\n              <input class=\"form__input\" autocomplete=\"off\" type=\"password\" placeholder=\"Password\" v-model=\"password\" required>\n            </div>\n            <div class=\"form-control\">\n              <label class=\"label\" for=\"\">Confirm Password</label>\n              <input class=\"form__input\" autocomplete=\"off\" type=\"password\" placeholder=\"Confirm Password\" v-model=\"confirm_password\" required>\n            </div>\n            <div class=\"form-control\">\n              <input type=\"submit\" class=\"form__submit\">\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n    <div class=\"page-side\">\n      <UserActions /> \n    </div>\n  </div>\n</template>\n\n<script>\nimport UserActions from '@/components/actions/User.vue'\nimport auth from '@/services/authentication'\nimport { mapGetters } from 'vuex'\nexport default {\n  name: 'home',\n  data () {\n    return {\n      emailSent: false,\n      firstTime: false,\n      password: '',\n      confirm_password: ''\n    }\n  },\n  components: {\n    UserActions\n  },\n  mounted() {\n    this.checkFisrtTime()\n  },\n  computed: {\n    ...mapGetters('Auth',['authUser']),\n  },\n  methods: {\n    checkFisrtTime: function() {\n        if (this.$route.params.token === 'ft') {\n          this.firstTime = true\n        }\n    },\n    async requestToken(){\n        let payload = {\n            \"email\": this.authUser.username\n        }\n        try {\n            await auth.resetPassword(payload)\n            this.emailSent = true\n            this.$swal({\n            icon: 'success',\n            text: 'Email sent',\n            showConfirmButton: false,\n            });\n        } catch (err) {\n            let error = Object.entries(err.response.data)\n            this.loading = !this.loading\n            this.$swal({\n            icon: 'error',\n            title: 'Oops...',\n            text: error,\n            showConfirmButton: false,\n            });\n        } \n    },\n    async setNewPassword(){\n        if (this.password !== this.confirm_password) {\n            this.password = ''\n            this.confirm_password = ''\n            this.$swal({\n                icon: 'error',\n                text: 'Passwords do not match',\n                showConfirmButton: false,\n            });\n            return null\n\n        }\n\n        let payload = {\n            \"password\": this.password,\n            \"token\": this.$route.params.token\n        }\n\n        try {\n            await auth.setPassword(payload)\n            this.$swal({\n                icon: 'success',\n                text: 'Password Updated. Please login again.',\n                showConfirmButton: false,\n            });\n            this.$store.dispatch('Auth/logout')\n            this.$store.dispatch('User/logout')\n            this.$router.push('/login')\n        } catch (err) {\n            let error = Object.entries(err.response.data)\n            this.$swal({\n            icon: 'error',\n            title: 'Oops...',\n            text: error,\n            showConfirmButton: false,\n            });\n        } \n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]}]}