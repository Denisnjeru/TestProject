{"remainingRequest":"/Users/user/Documents/TestProject/Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/user/Documents/TestProject/Frontend/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/user/Documents/TestProject/Frontend/src/App.vue","mtime":1647724083205},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TopNav from '@/components/TopNav.vue'\nimport SideNav from '@/components/SideNav.vue'\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'Home',\n  data () {\n    return {\n\n    }\n  },\n  created () {\n    let route_name = window.location.pathname.split('/')\n    if (this.isAuthenticated === false) {     \n      if (route_name[1] !== 'set-password') {\n        this.$router.push('/login');\n      } else {\n        this.$router.push('/login');\n      }\n    } else {\n      if (route_name[1] === 'set-password') {\n        this.$router.push('/update-password/' + route_name[2]);\n        //     :8080/approval/invoice-approval/1/token\n      }\n\n      if (this.authUser.gl_structure === false) {\n        console.log(this.authUser.gl_structure)\n        this.$router.push('/company/setup')\n      }\n    }\n  },\n  computed: {\n        ...mapGetters('Auth',['isAuthenticated', 'authUser']),\n  },\n  components: {\n    TopNav,\n    SideNav\n  }\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\" class=\"wrapper\">\n    <div class=\"top-nav\" v-if=\"isAuthenticated\">\n      <TopNav />\n    </div>\n    <div class=\"grid-container\">\n      <div class=\"side-nav\" v-if=\"isAuthenticated\">\n        <SideNav />\n      </div>\n      <div class=\"view\">\n        <router-view/>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TopNav from '@/components/TopNav.vue'\nimport SideNav from '@/components/SideNav.vue'\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'Home',\n  data () {\n    return {\n\n    }\n  },\n  created () {\n    let route_name = window.location.pathname.split('/')\n    if (this.isAuthenticated === false) {     \n      if (route_name[1] !== 'set-password') {\n        this.$router.push('/login');\n      } else {\n        this.$router.push('/login');\n      }\n    } else {\n      if (route_name[1] === 'set-password') {\n        this.$router.push('/update-password/' + route_name[2]);\n        //     :8080/approval/invoice-approval/1/token\n      }\n\n      if (this.authUser.gl_structure === false) {\n        console.log(this.authUser.gl_structure)\n        this.$router.push('/company/setup')\n      }\n    }\n  },\n  computed: {\n        ...mapGetters('Auth',['isAuthenticated', 'authUser']),\n  },\n  components: {\n    TopNav,\n    SideNav\n  }\n}\n</script>\n\n<style lang=\"scss\">\n#app {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: $color-black-medium;//#2c3e50;\n  font-size: $font-size-small;\n}\n\n.wrapper {\n  width: 100%;\n  height: 100vh;\n  background-color: $color-white-pure;\n  overflow: hidden;\n\n  .grid-container {\n    width: 100%;\n    height: 90vh;\n\n    @include grid_row;\n    justify-content: flex-start;\n\n    .side-nav {\n      width: 20%;\n      // width: 5%;\n    }\n\n    .view {\n      width: 80%;\n      // padding: 2%;\n      // width: 95%;\n    }\n  }\n}\n\n.page-container {\n  @include page-container;\n  @include form();\n\n  .wizard-header {\n    display: none;\n  }\n}\n</style>\n"]}]}