{"remainingRequest":"/Users/user/Documents/TestProject/Frontend/node_modules/babel-loader/lib/index.js!/Users/user/Documents/TestProject/Frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/user/Documents/TestProject/Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/user/Documents/TestProject/Frontend/src/views/users/UpdatePassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/user/Documents/TestProject/Frontend/src/views/users/UpdatePassword.vue","mtime":1647724083233},{"path":"/Users/user/Documents/TestProject/Frontend/babel.config.js","mtime":1647724083201},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.object.entries\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/user/Documents/TestProject/Frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"/Users/user/Documents/TestProject/Frontend/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport UserActions from '@/components/actions/User.vue';\nimport auth from '@/services/authentication';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'home',\n  data: function data() {\n    return {\n      emailSent: false,\n      firstTime: false,\n      password: '',\n      confirm_password: ''\n    };\n  },\n  components: {\n    UserActions: UserActions\n  },\n  mounted: function mounted() {\n    this.checkFisrtTime();\n  },\n  computed: _objectSpread({}, mapGetters('Auth', ['authUser'])),\n  methods: {\n    checkFisrtTime: function checkFisrtTime() {\n      if (this.$route.params.token === 'ft') {\n        this.firstTime = true;\n      }\n    },\n    requestToken: function () {\n      var _requestToken = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var payload, error;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                payload = {\n                  \"email\": this.authUser.username\n                };\n                _context.prev = 1;\n                _context.next = 4;\n                return auth.resetPassword(payload);\n\n              case 4:\n                this.emailSent = true;\n                this.$swal({\n                  icon: 'success',\n                  text: 'Email sent',\n                  showConfirmButton: false\n                });\n                _context.next = 13;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                error = Object.entries(_context.t0.response.data);\n                this.loading = !this.loading;\n                this.$swal({\n                  icon: 'error',\n                  title: 'Oops...',\n                  text: error,\n                  showConfirmButton: false\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 8]]);\n      }));\n\n      function requestToken() {\n        return _requestToken.apply(this, arguments);\n      }\n\n      return requestToken;\n    }(),\n    setNewPassword: function () {\n      var _setNewPassword = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var payload, error;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.password !== this.confirm_password)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                this.password = '';\n                this.confirm_password = '';\n                this.$swal({\n                  icon: 'error',\n                  text: 'Passwords do not match',\n                  showConfirmButton: false\n                });\n                return _context2.abrupt(\"return\", null);\n\n              case 5:\n                payload = {\n                  \"password\": this.password,\n                  \"token\": this.$route.params.token\n                };\n                _context2.prev = 6;\n                _context2.next = 9;\n                return auth.setPassword(payload);\n\n              case 9:\n                this.$swal({\n                  icon: 'success',\n                  text: 'Password Updated. Please login again.',\n                  showConfirmButton: false\n                });\n                this.$store.dispatch('Auth/logout');\n                this.$store.dispatch('User/logout');\n                this.$router.push('/login');\n                _context2.next = 19;\n                break;\n\n              case 15:\n                _context2.prev = 15;\n                _context2.t0 = _context2[\"catch\"](6);\n                error = Object.entries(_context2.t0.response.data);\n                this.$swal({\n                  icon: 'error',\n                  title: 'Oops...',\n                  text: error,\n                  showConfirmButton: false\n                });\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[6, 15]]);\n      }));\n\n      function setNewPassword() {\n        return _setNewPassword.apply(this, arguments);\n      }\n\n      return setNewPassword;\n    }()\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACA;AACAA,cADA;AAEAC,MAFA,kBAEA;AACA;AACAC,sBADA;AAEAC,sBAFA;AAGAC,kBAHA;AAIAC;AAJA;AAMA,GATA;AAUAC;AACAC;AADA,GAVA;AAaAC,SAbA,qBAaA;AACA;AACA,GAfA;AAgBAC,8BACAC,gCADA,CAhBA;AAmBAC;AACAC;AACA;AACA;AACA;AACA,KALA;AAMAC,gBANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOAC,uBAPA,GAOA;AACA;AADA,iBAPA;AAAA;AAAA;AAAA,uBAWAC,2BAXA;;AAAA;AAYA;AACA;AACAC,iCADA;AAEAC,oCAFA;AAGAC;AAHA;AAbA;AAAA;;AAAA;AAAA;AAAA;AAmBAC,qBAnBA,GAmBAC,yCAnBA;AAoBA;AACA;AACAJ,+BADA;AAEAK,kCAFA;AAGAJ,6BAHA;AAIAC;AAJA;;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA6BAI,kBA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA8BA,uCA9BA;AAAA;AAAA;AAAA;;AA+BA;AACA;AACA;AACAN,+BADA;AAEAC,gDAFA;AAGAC;AAHA;AAjCA,kDAsCA,IAtCA;;AAAA;AA0CAJ,uBA1CA,GA0CA;AACA,2CADA;AAEA;AAFA,iBA1CA;AAAA;AAAA;AAAA,uBAgDAC,yBAhDA;;AAAA;AAiDA;AACAC,iCADA;AAEAC,+DAFA;AAGAC;AAHA;AAKA;AACA;AACA;AAxDA;AAAA;;AAAA;AAAA;AAAA;AA0DAC,qBA1DA,GA0DAC,0CA1DA;AA2DA;AACAJ,+BADA;AAEAK,kCAFA;AAGAJ,6BAHA;AAIAC;AAJA;;AA3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAnBA","names":["name","data","emailSent","firstTime","password","confirm_password","components","UserActions","mounted","computed","mapGetters","methods","checkFisrtTime","requestToken","payload","auth","icon","text","showConfirmButton","error","Object","title","setNewPassword"],"sourceRoot":"src/views/users","sources":["UpdatePassword.vue"],"sourcesContent":["<template>\n  <div class=\"home page-container\">\n    <div class=\"page\">\n      <h4 class=\"page__title\">Security</h4>\n      <p class=\"page__desc\">Update Password</p>\n      <div class=\"page__content\">\n        <span v-if=\"firstTime === true\">\n          <br>\n          <br>\n          <div class=\"page__content--row\">\n            <p class=\"element\">\n                <span class=\"element__title\">Welcome to eProcure. Please reset your password to proceed.</span>\n            </p>\n          </div>\n          <div class=\"page__content--row\" v-if=\"emailSent === false\">\n            <p class=\"element\">\n                <span class=\"element__title\">Get reset password link on your email - </span>\n                <span class=\"element__content link\" @click=\"requestToken()\">Get link</span>\n            </p>\n          </div>\n          <div class=\"page__content--row\" v-else>\n            <p class=\"element\">\n                <span class=\"element__title\">\n                  <strong>Email has been sent, please check your email. </strong>\n                  <span class=\"element__content link\" @click=\"requestToken()\"> Resend Email</span>\n                </span>\n            </p>\n          </div>\n        </span>\n        <div v-else class=\"form-container\">\n          <form v-on:submit.prevent=\"setNewPassword()\" class=\"form\">\n            <p class=\"page__content--sub-title\">Set new password</p>\n            <div class=\"form-control\">\n              <label class=\"label\" for=\"\">Password</label>\n              <input class=\"form__input\" autocomplete=\"off\" type=\"password\" placeholder=\"Password\" v-model=\"password\" required>\n            </div>\n            <div class=\"form-control\">\n              <label class=\"label\" for=\"\">Confirm Password</label>\n              <input class=\"form__input\" autocomplete=\"off\" type=\"password\" placeholder=\"Confirm Password\" v-model=\"confirm_password\" required>\n            </div>\n            <div class=\"form-control\">\n              <input type=\"submit\" class=\"form__submit\">\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n    <div class=\"page-side\">\n      <UserActions /> \n    </div>\n  </div>\n</template>\n\n<script>\nimport UserActions from '@/components/actions/User.vue'\nimport auth from '@/services/authentication'\nimport { mapGetters } from 'vuex'\nexport default {\n  name: 'home',\n  data () {\n    return {\n      emailSent: false,\n      firstTime: false,\n      password: '',\n      confirm_password: ''\n    }\n  },\n  components: {\n    UserActions\n  },\n  mounted() {\n    this.checkFisrtTime()\n  },\n  computed: {\n    ...mapGetters('Auth',['authUser']),\n  },\n  methods: {\n    checkFisrtTime: function() {\n        if (this.$route.params.token === 'ft') {\n          this.firstTime = true\n        }\n    },\n    async requestToken(){\n        let payload = {\n            \"email\": this.authUser.username\n        }\n        try {\n            await auth.resetPassword(payload)\n            this.emailSent = true\n            this.$swal({\n            icon: 'success',\n            text: 'Email sent',\n            showConfirmButton: false,\n            });\n        } catch (err) {\n            let error = Object.entries(err.response.data)\n            this.loading = !this.loading\n            this.$swal({\n            icon: 'error',\n            title: 'Oops...',\n            text: error,\n            showConfirmButton: false,\n            });\n        } \n    },\n    async setNewPassword(){\n        if (this.password !== this.confirm_password) {\n            this.password = ''\n            this.confirm_password = ''\n            this.$swal({\n                icon: 'error',\n                text: 'Passwords do not match',\n                showConfirmButton: false,\n            });\n            return null\n\n        }\n\n        let payload = {\n            \"password\": this.password,\n            \"token\": this.$route.params.token\n        }\n\n        try {\n            await auth.setPassword(payload)\n            this.$swal({\n                icon: 'success',\n                text: 'Password Updated. Please login again.',\n                showConfirmButton: false,\n            });\n            this.$store.dispatch('Auth/logout')\n            this.$store.dispatch('User/logout')\n            this.$router.push('/login')\n        } catch (err) {\n            let error = Object.entries(err.response.data)\n            this.$swal({\n            icon: 'error',\n            title: 'Oops...',\n            text: error,\n            showConfirmButton: false,\n            });\n        } \n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]}]}