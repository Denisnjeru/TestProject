{"remainingRequest":"/Users/user/Documents/TestProject/Frontend/node_modules/babel-loader/lib/index.js!/Users/user/Documents/TestProject/Frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/user/Documents/TestProject/Frontend/src/services/authentication.js","dependencies":[{"path":"/Users/user/Documents/TestProject/Frontend/src/services/authentication.js","mtime":1657309923553},{"path":"/Users/user/Documents/TestProject/Frontend/babel.config.js","mtime":1647724083201},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import api from \"../apiV1/api\";\nvar auth = {\n  login: function login(content) {\n    return new Promise(function (resolve, reject) {\n      api.post('/auth/token/', content, function (data) {\n        resolve(data);\n      }, function (error) {\n        reject(error);\n      });\n    });\n  },\n  signup: function signup(content) {\n    return new Promise(function (resolve, reject) {\n      api.post('/auth/signup/', content, function (data) {\n        resolve(data);\n      }, function (error) {\n        reject(error);\n      });\n    });\n  },\n  resetPassword: function resetPassword(content) {\n    return new Promise(function (resolve, reject) {\n      api.post('/auth/reset_password_request/', content, function (data) {\n        resolve(data);\n      }, function (error) {\n        reject(error);\n      });\n    });\n  },\n  setPassword: function setPassword(content) {\n    return new Promise(function (resolve, reject) {\n      api.post('/auth/confirm/', content, function (data) {\n        resolve(data);\n      }, function (error) {\n        reject(error);\n      });\n    });\n  }\n};\nexport default auth;",{"version":3,"sources":["/Users/user/Documents/TestProject/Frontend/src/services/authentication.js"],"names":["api","auth","login","content","Promise","resolve","reject","post","data","error","signup","resetPassword","setPassword"],"mappings":"AAAA,OAAOA,GAAP;AAEA,IAAMC,IAAI,GAAG;AACXC,EAAAA,KADW,iBACLC,OADK,EACI;AACb,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCN,MAAAA,GAAG,CAACO,IAAJ,CAAS,cAAT,EAAyBJ,OAAzB,EAAkC,UAACK,IAAD,EAAU;AAC1CH,QAAAA,OAAO,CAACG,IAAD,CAAP;AACD,OAFD,EAEG,UAACC,KAAD,EAAW;AACZH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACD,OAJD;AAKD,KANM,CAAP;AAOD,GATU;AAUXC,EAAAA,MAVW,kBAUJP,OAVI,EAUK;AACd,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCN,MAAAA,GAAG,CAACO,IAAJ,CAAS,eAAT,EAA0BJ,OAA1B,EAAmC,UAACK,IAAD,EAAU;AAC3CH,QAAAA,OAAO,CAACG,IAAD,CAAP;AACD,OAFD,EAEG,UAACC,KAAD,EAAW;AACZH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACD,OAJD;AAKD,KANM,CAAP;AAOD,GAlBU;AAmBXE,EAAAA,aAnBW,yBAmBGR,OAnBH,EAmBY;AACrB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCN,MAAAA,GAAG,CAACO,IAAJ,CAAS,+BAAT,EAA0CJ,OAA1C,EAAmD,UAACK,IAAD,EAAU;AAC3DH,QAAAA,OAAO,CAACG,IAAD,CAAP;AACD,OAFD,EAEG,UAACC,KAAD,EAAW;AACZH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACD,OAJD;AAKD,KANM,CAAP;AAOD,GA3BU;AA4BXG,EAAAA,WA5BW,uBA4BCT,OA5BD,EA4BU;AACnB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCN,MAAAA,GAAG,CAACO,IAAJ,CAAS,gBAAT,EAA2BJ,OAA3B,EAAoC,UAACK,IAAD,EAAU;AAC5CH,QAAAA,OAAO,CAACG,IAAD,CAAP;AACD,OAFD,EAEG,UAACC,KAAD,EAAW;AACZH,QAAAA,MAAM,CAACG,KAAD,CAAN;AACD,OAJD;AAKD,KANM,CAAP;AAOD;AApCU,CAAb;AAwCA,eAAeR,IAAf","sourcesContent":["import api from '../apiV1/api'\n\nconst auth = {\n  login(content) {\n    return new Promise((resolve, reject) => {\n      api.post('/auth/token/', content, (data) => {\n        resolve(data);\n      }, (error) => {\n        reject(error);\n      });\n    });\n  },\n  signup(content) {\n    return new Promise((resolve, reject) => {\n      api.post('/auth/signup/', content, (data) => {\n        resolve(data);\n      }, (error) => {\n        reject(error);\n      });\n    });\n  },\n  resetPassword(content) {\n    return new Promise((resolve, reject) => {\n      api.post('/auth/reset_password_request/', content, (data) => {\n        resolve(data);\n      }, (error) => {\n        reject(error);\n      });\n    });\n  },\n  setPassword(content) {\n    return new Promise((resolve, reject) => {\n      api.post('/auth/confirm/', content, (data) => {\n        resolve(data);\n      }, (error) => {\n        reject(error);\n      });\n    });\n  },\n}\n\n\nexport default auth"]}]}