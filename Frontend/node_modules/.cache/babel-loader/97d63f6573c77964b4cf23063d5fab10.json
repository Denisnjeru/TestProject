{"remainingRequest":"/Users/user/Documents/TestProject/Frontend/node_modules/babel-loader/lib/index.js!/Users/user/Documents/TestProject/Frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/user/Documents/TestProject/Frontend/src/store/modules/user.store.js","dependencies":[{"path":"/Users/user/Documents/TestProject/Frontend/src/store/modules/user.store.js","mtime":1647724083216},{"path":"/Users/user/Documents/TestProject/Frontend/babel.config.js","mtime":1647724083201},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/user/Documents/TestProject/Frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport user from '@/services/user';\nimport Utils from \"../../utils/Cookies\";\n\nvar initialState = function initialState() {\n  return {\n    userLoadStatus: 0,\n    // 1 - Loading, 2 - Successful, 3 - unsuccesful, 4 - uncaught error\n    userMessage: null,\n    // userData: !!Cookies.get('userData') && Cookies.get('userData'),\n    userData: null,\n    userProfile: null,\n    userType: 'client'\n  };\n};\n\nvar state = initialState();\nvar getters = {\n  userLoadStatus: function userLoadStatus(state) {\n    return state.userLoadStatus;\n  },\n  userMessage: function userMessage(state) {\n    return state.userMessage;\n  },\n  userData: function userData(state) {\n    // return JSON.parse(state.userData)\n    return state.userData;\n  },\n  userProfile: function userProfile(state) {\n    return state.userProfile;\n  },\n  userType: function userType(state) {\n    return state.userType;\n  }\n};\nvar mutations = {\n  userRequest: function userRequest(state) {\n    state.userLoadStatus = 1;\n    state.userMessage = null;\n  },\n  userSuccess: function userSuccess(state, response) {\n    state.userLoadStatus = 2;\n    state.userMessage = 'User data loaded successfully!'; // state.userData = Cookies.set('userData', JSON.stringify(response.data))\n\n    state.userData = response.data;\n  },\n  userError: function userError(state, response) {\n    state.userLoadStatus = 3;\n    state.userMessage = response.data;\n  },\n  userExec: function userExec(state, error) {\n    state.userLoadStatus = 4;\n    state.userMessage = error.response;\n  },\n  updateUserType: function updateUserType(state, payload) {\n    state.userType = payload.userType;\n  },\n  userLogout: function userLogout(state) {\n    state.userData = null;\n    state.userProfile = null;\n    state.userType = 'client';\n  },\n  // Reset\n  reset: function reset(state) {\n    var newState = initialState();\n    Object.keys(newState).forEach(function (key) {\n      state[key] = newState[key];\n    });\n  }\n};\nvar actions = {\n  getUser: function () {\n    var _getUser = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              return _context.abrupt(\"return\", new Promise(function (resolve) {\n                var userData = Utils.authTokenExists() && Utils.decodeAuthToken();\n                var userId = userData.user_id;\n\n                if (userId) {\n                  commit('userRequest');\n                  user.userProfile(userId).then(function (response) {\n                    // success\n                    commit('userSuccess', response);\n                    var userType = 'client';\n\n                    if (response.data.user.user_type !== 'eprocure-admin') {\n                      userType = response.data.user.user_type;\n                    }\n\n                    commit('updateUserType', {\n                      userType: userType\n                    });\n                    resolve();\n                  }).catch(function (error) {\n                    console.log(error);\n                    resolve();\n                  });\n                }\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getUser(_x) {\n      return _getUser.apply(this, arguments);\n    }\n\n    return getUser;\n  }(),\n  setUserType: function setUserType(_ref2, payload) {\n    var commit = _ref2.commit;\n    commit('updateUserType', payload);\n  },\n  logout: function logout(_ref3) {\n    var commit = _ref3.commit;\n    commit('reset');\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Users/user/Documents/TestProject/Frontend/src/store/modules/user.store.js"],"names":["user","Utils","initialState","userLoadStatus","userMessage","userData","userProfile","userType","state","getters","mutations","userRequest","userSuccess","response","data","userError","userExec","error","updateUserType","payload","userLogout","reset","newState","Object","keys","forEach","key","actions","getUser","commit","Promise","resolve","authTokenExists","decodeAuthToken","userId","user_id","then","user_type","catch","console","log","setUserType","logout","namespaced"],"mappings":"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","sourcesContent":["import user from '@/services/user';\nimport Utils from '../../utils/Cookies';\n\n\nconst initialState = () => ({\n    userLoadStatus: 0, // 1 - Loading, 2 - Successful, 3 - unsuccesful, 4 - uncaught error\n    userMessage: null,\n    // userData: !!Cookies.get('userData') && Cookies.get('userData'),\n    userData: null,\n    userProfile: null,\n    userType: 'client'\n});\n\nconst state = initialState();\n\nconst getters = {\n    userLoadStatus(state) {\n        return state.userLoadStatus\n    },\n    userMessage(state) {\n        return state.userMessage\n    },\n    userData(state) {\n        // return JSON.parse(state.userData)\n        return state.userData\n    },\n    userProfile(state) {\n        return state.userProfile\n    },\n    userType(state) {\n        return state.userType\n    },   \n\n\n}\n\nconst mutations = {\n    userRequest(state) {\n        state.userLoadStatus = 1\n        state.userMessage = null\n    },\n\n    userSuccess(state, response) {\n        state.userLoadStatus = 2\n        state.userMessage = 'User data loaded successfully!'\n        // state.userData = Cookies.set('userData', JSON.stringify(response.data))\n        state.userData = response.data\n    },\n\n    userError(state, response) {\n        state.userLoadStatus = 3\n        state.userMessage = response.data\n    },\n\n    userExec(state, error) {\n        state.userLoadStatus = 4\n        state.userMessage = error.response\n    },\n    updateUserType (state, payload) {\n        state.userType = payload.userType\n    },\n    userLogout(state){\n        state.userData = null\n        state.userProfile = null\n        state.userType = 'client'\n    },\n    // Reset\n    reset(state) {\n        const newState = initialState()\n        Object.keys(newState).forEach(key => {\n            state[key] = newState[key]\n        })\n    }\n\n    \n}\n\nconst actions = {\n    async getUser({ commit }) {\n        return new Promise((resolve) => {\n            const userData = Utils.authTokenExists() && Utils.decodeAuthToken()\n            const userId = userData.user_id;\n\n            if (userId) {\n                commit('userRequest');\n                user.userProfile(userId)\n                .then((response) => {\n                    // success\n                    commit('userSuccess', response)\n                        let userType = 'client'\n                        if (response.data.user.user_type !== 'eprocure-admin') {\n                            userType = response.data.user.user_type\n                        }                         \n                        commit('updateUserType', { userType })\n\n                    resolve()\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resolve()\n                });\n            } \n        });\n    },\n    setUserType ({ commit }, payload) {\n        commit('updateUserType', payload)\n    },\n    logout({ commit }){\n        commit('reset')\n    },\n\n}\n\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n}\n"]}]}