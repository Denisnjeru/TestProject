{"remainingRequest":"/Users/user/Documents/TestProject/Frontend/node_modules/babel-loader/lib/index.js!/Users/user/Documents/TestProject/Frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/user/Documents/TestProject/Frontend/src/store/modules/auth.store.js","dependencies":[{"path":"/Users/user/Documents/TestProject/Frontend/src/store/modules/auth.store.js","mtime":1647724083215},{"path":"/Users/user/Documents/TestProject/Frontend/babel.config.js","mtime":1647724083201},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/user/Documents/TestProject/Frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport auth from \"../../services/authentication\";\nimport Utils from \"../../utils/Cookies\";\n\nvar initialState = function initialState() {\n  return {\n    authStatus: 0,\n    // 1 - Loading, 2 - Successful, 3 - unsuccesful\n    authMessage: null,\n    token: Utils.authTokenExists() && Utils.getToken() || '',\n    authUser: null,\n    //(Utils.authTokenExists()) || [],\n    authError: null\n  };\n};\n\nvar state = initialState();\nvar getters = {\n  authStatus: function authStatus(state) {\n    return state.authStatus;\n  },\n  authMessage: function authMessage(state) {\n    return state.authMessage;\n  },\n  isAuthenticated: function isAuthenticated(state) {\n    return !!state.token;\n  },\n  authUser: function authUser(state) {\n    return state.authUser;\n  },\n  authError: function authError(state) {\n    return state.authError;\n  }\n};\nvar mutations = {\n  authRequest: function authRequest(state) {\n    state.authStatus = 1;\n  },\n  authSuccess: function authSuccess(state, response) {\n    state.authStatus = 2;\n    state.authMessage = 'Logged in successfully';\n    state.token = response.token.access;\n    state.authUser = response.decodedToken; // do domething with the response\n  },\n  authError: function authError(state, error) {\n    state.authStatus = 3;\n    state.authError = error;\n  },\n  authLogout: function authLogout(state, response) {\n    state.authStatus = 0;\n    state.authMessage = null;\n    state.isAuthenticated = false;\n    state.token = '';\n    state.authUser = [];\n  },\n  updateToken: function updateToken(state, token) {\n    state.token = token;\n  },\n  // Reset\n  reset: function reset(state) {\n    var newState = initialState();\n    Object.keys(newState).forEach(function (key) {\n      state[key] = newState[key];\n    });\n  }\n};\nvar actions = {\n  login: function () {\n    var _login = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, payload) {\n      var commit, response, userData, error;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.prev = 1;\n              commit('authRequest');\n              _context.next = 5;\n              return auth.login(payload);\n\n            case 5:\n              response = _context.sent;\n              userData = Utils.saveToken(response.data);\n              commit('authSuccess', userData);\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              error = _context.t0.response.data.detail;\n              commit('authError', error);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 10]]);\n    }));\n\n    function login(_x, _x2) {\n      return _login.apply(this, arguments);\n    }\n\n    return login;\n  }(),\n  setToken: function setToken(_ref2, payload) {\n    var commit = _ref2.commit;\n    var userData = Utils.setToken(payload);\n    commit('authSuccess', userData);\n    commit('updateToken', payload);\n  },\n  logout: function logout(_ref3) {\n    var commit = _ref3.commit;\n    Utils.removeToken('userData');\n    Utils.removeToken('token');\n    commit('reset');\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["/Users/user/Documents/TestProject/Frontend/src/store/modules/auth.store.js"],"names":["auth","Utils","initialState","authStatus","authMessage","token","authTokenExists","getToken","authUser","authError","state","getters","isAuthenticated","mutations","authRequest","authSuccess","response","access","decodedToken","error","authLogout","updateToken","reset","newState","Object","keys","forEach","key","actions","login","payload","commit","userData","saveToken","data","detail","setToken","logout","removeToken","namespaced"],"mappings":"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","sourcesContent":["import auth from '../../services/authentication';\nimport Utils from '../../utils/Cookies';\n\nconst initialState = () => ({\n  authStatus: 0, // 1 - Loading, 2 - Successful, 3 - unsuccesful\n  authMessage: null,\n  token: (Utils.authTokenExists() && Utils.getToken()) || '',\n  authUser: null, //(Utils.authTokenExists()) || [],\n  authError: null,\n\n});\n\nconst state = initialState();\n\nconst getters = {\n  authStatus: state => state.authStatus,\n  authMessage: state => state.authMessage,\n  isAuthenticated(state) {\n      return !!state.token\n  },\n  authUser(state) {\n      return state.authUser\n  },\n  authError(state) {\n      return state.authError\n  }\n\n}\n\nconst mutations = {\n  authRequest(state) {\n    state.authStatus = 1\n  },\n  authSuccess(state, response) {\n    state.authStatus = 2\n    state.authMessage = 'Logged in successfully'\n    state.token = response.token.access\n    state.authUser = response.decodedToken\n    // do domething with the response\n  },\n  authError(state, error) {\n    state.authStatus = 3\n    state.authError = error\n  },\n  authLogout(state, response){\n    state.authStatus = 0\n    state.authMessage = null\n    state.isAuthenticated = false\n    state.token = ''\n    state.authUser = []\n  },\n  updateToken(state, token) {\n    state.token = token\n  },\n  \n  // Reset\n  reset(state) {\n    const newState = initialState()\n    Object.keys(newState).forEach(key => {\n        state[key] = newState[key]\n    })\n  }\n}\n\nconst actions = {\n  login: async ({ commit }, payload) => {\n    try {\n      commit('authRequest')\n      const response = await auth.login(payload);\n      let userData = Utils.saveToken(response.data);\n      commit('authSuccess', userData);\n    } catch (err) {\n      let error = err.response.data.detail\n      commit('authError', error)\n    }\n  },\n  setToken({ commit }, payload) {\n    let userData = Utils.setToken(payload);\n    commit('authSuccess', userData);\n    commit('updateToken', payload);\n  },\n  logout({ commit }){\n    Utils.removeToken('userData')\n    Utils.removeToken('token')\n    commit('reset')\n  },\n}\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n}"]}]}