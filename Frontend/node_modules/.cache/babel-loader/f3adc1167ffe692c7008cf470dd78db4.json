{"remainingRequest":"/Users/user/Documents/TestProject/Frontend/node_modules/babel-loader/lib/index.js!/Users/user/Documents/TestProject/Frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/user/Documents/TestProject/Frontend/src/store/modules/category.store.js","dependencies":[{"path":"/Users/user/Documents/TestProject/Frontend/src/store/modules/category.store.js","mtime":1647724083216},{"path":"/Users/user/Documents/TestProject/Frontend/babel.config.js","mtime":1647724083201},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// import user from '@/services/user';\n// import Utils from '../../utils/Cookies';\nvar initialState = function initialState() {\n  return {\n    categories: []\n  };\n}; // const state = initialState();\n\n\nvar state = {\n  categories: [{\n    'id': 1,\n    'category_name': 'Stationery',\n    'status': true\n  }, {\n    'id': 2,\n    'category_name': 'Computers',\n    'status': false\n  }]\n};\nvar getters = {\n  allCategories: function allCategories(state) {\n    return state.categories;\n  },\n  categoriesNumber: function categoriesNumber(state) {\n    return state.categories.length;\n  }\n};\nvar mutations = {\n  addCategory: function addCategory(state, category) {\n    state.categories.push(category);\n  }\n};\nvar actions = {\n  createCategory: function createCategory(_ref, payload) {\n    var commit = _ref.commit;\n    commit('addCategory', payload);\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Users/user/Documents/TestProject/Frontend/src/store/modules/category.store.js"],"names":["initialState","categories","state","getters","allCategories","categoriesNumber","length","mutations","addCategory","category","push","actions","createCategory","payload","commit","namespaced"],"mappings":"AAAA;AACA;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAO;AACxBC,IAAAA,UAAU,EAAE;AADY,GAAP;AAAA,CAArB,C,CAIA;;;AAEA,IAAMC,KAAK,GAAG;AACVD,EAAAA,UAAU,EAAE,CACR;AAAE,UAAM,CAAR;AAAW,qBAAiB,YAA5B;AAA0C,cAAU;AAApD,GADQ,EAER;AAAE,UAAM,CAAR;AAAW,qBAAiB,WAA5B;AAAyC,cAAU;AAAnD,GAFQ;AADF,CAAd;AAOA,IAAME,OAAO,GAAG;AACZC,EAAAA,aADY,yBACGF,KADH,EACU;AAClB,WAAOA,KAAK,CAACD,UAAb;AACH,GAHW;AAIZI,EAAAA,gBAJY,4BAIMH,KAJN,EAIa;AACrB,WAAOA,KAAK,CAACD,UAAN,CAAiBK,MAAxB;AACH;AANW,CAAhB;AASA,IAAMC,SAAS,GAAG;AACdC,EAAAA,WADc,uBACDN,KADC,EACMO,QADN,EACgB;AAC1BP,IAAAA,KAAK,CAACD,UAAN,CAAiBS,IAAjB,CAAsBD,QAAtB;AACH;AAHa,CAAlB;AAMA,IAAME,OAAO,GAAG;AACZC,EAAAA,cADY,gCACgBC,OADhB,EACyB;AAAA,QAAnBC,MAAmB,QAAnBA,MAAmB;AACjCA,IAAAA,MAAM,CAAC,aAAD,EAAgBD,OAAhB,CAAN;AACH;AAHW,CAAhB;AAMA,eAAe;AACXE,EAAAA,UAAU,EAAE,IADD;AAEXb,EAAAA,KAAK,EAALA,KAFW;AAGXC,EAAAA,OAAO,EAAPA,OAHW;AAIXQ,EAAAA,OAAO,EAAPA,OAJW;AAKXJ,EAAAA,SAAS,EAATA;AALW,CAAf","sourcesContent":["// import user from '@/services/user';\n// import Utils from '../../utils/Cookies';\n\nconst initialState = () => ({\n    categories: [],\n});\n\n// const state = initialState();\n\nconst state = {\n    categories: [\n        { 'id': 1, 'category_name': 'Stationery', 'status': true },\n        { 'id': 2, 'category_name': 'Computers', 'status': false },\n    ],\n}\n\nconst getters = {\n    allCategories (state) {\n        return state.categories\n    },\n    categoriesNumber (state) {\n        return state.categories.length\n    }\n}\n\nconst mutations = {\n    addCategory (state, category) {\n        state.categories.push(category)\n    }\n}\n\nconst actions = {\n    createCategory ({ commit }, payload) {\n        commit('addCategory', payload)\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n}\n"]}]}