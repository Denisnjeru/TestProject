{"remainingRequest":"/Users/user/Documents/TestProject/Frontend/node_modules/babel-loader/lib/index.js!/Users/user/Documents/TestProject/Frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/user/Documents/TestProject/Frontend/src/store/modules/budget.store.js","dependencies":[{"path":"/Users/user/Documents/TestProject/Frontend/src/store/modules/budget.store.js","mtime":1647724083216},{"path":"/Users/user/Documents/TestProject/Frontend/babel.config.js","mtime":1647724083201},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// import user from '@/services/user';\n// import Utils from '../../utils/Cookies';\nvar initialState = function initialState() {\n  return {\n    activeBudgetID: null\n  };\n}; // const state = initialState();\n\n\nvar state = {\n  activeBudgetID: null\n};\nvar getters = {\n  activeBudgetID: function activeBudgetID(state) {\n    return state.activeBudgetID;\n  }\n};\nvar mutations = {\n  updateActiveBudgetID: function updateActiveBudgetID(state, payload) {\n    state.activeBudgetID = payload.budgetID;\n  }\n};\nvar actions = {\n  setActiveBudgetID: function setActiveBudgetID(_ref, payload) {\n    var commit = _ref.commit;\n    commit('updateActiveBudgetID', payload);\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Users/user/Documents/TestProject/Frontend/src/store/modules/budget.store.js"],"names":["initialState","activeBudgetID","state","getters","mutations","updateActiveBudgetID","payload","budgetID","actions","setActiveBudgetID","commit","namespaced"],"mappings":"AAAA;AACA;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAO;AACxBC,IAAAA,cAAc,EAAE;AADQ,GAAP;AAAA,CAArB,C,CAIA;;;AAEA,IAAMC,KAAK,GAAG;AACVD,EAAAA,cAAc,EAAE;AADN,CAAd;AAIA,IAAME,OAAO,GAAG;AACZF,EAAAA,cADY,0BACIC,KADJ,EACW;AACnB,WAAOA,KAAK,CAACD,cAAb;AACH;AAHW,CAAhB;AAMA,IAAMG,SAAS,GAAG;AACdC,EAAAA,oBADc,gCACQH,KADR,EACeI,OADf,EACwB;AAClCJ,IAAAA,KAAK,CAACD,cAAN,GAAuBK,OAAO,CAACC,QAA/B;AACH;AAHa,CAAlB;AAMA,IAAMC,OAAO,GAAG;AACZC,EAAAA,iBADY,mCACmBH,OADnB,EAC4B;AAAA,QAAnBI,MAAmB,QAAnBA,MAAmB;AACpCA,IAAAA,MAAM,CAAC,sBAAD,EAAyBJ,OAAzB,CAAN;AACH;AAHW,CAAhB;AAMA,eAAe;AACXK,EAAAA,UAAU,EAAE,IADD;AAEXT,EAAAA,KAAK,EAALA,KAFW;AAGXC,EAAAA,OAAO,EAAPA,OAHW;AAIXK,EAAAA,OAAO,EAAPA,OAJW;AAKXJ,EAAAA,SAAS,EAATA;AALW,CAAf","sourcesContent":["// import user from '@/services/user';\n// import Utils from '../../utils/Cookies';\n\nconst initialState = () => ({\n    activeBudgetID: null,\n});\n\n// const state = initialState();\n\nconst state = {\n    activeBudgetID: null,\n}\n\nconst getters = {\n    activeBudgetID (state) {\n        return state.activeBudgetID\n    },\n}\n\nconst mutations = {\n    updateActiveBudgetID (state, payload) {\n        state.activeBudgetID = payload.budgetID\n    },\n}\n\nconst actions = {\n    setActiveBudgetID ({ commit }, payload) {\n        commit('updateActiveBudgetID', payload)\n    },\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n}\n"]}]}