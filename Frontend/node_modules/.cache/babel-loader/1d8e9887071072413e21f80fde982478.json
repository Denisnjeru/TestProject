{"remainingRequest":"/Users/user/Documents/TestProject/Frontend/node_modules/babel-loader/lib/index.js!/Users/user/Documents/TestProject/Frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/user/Documents/TestProject/Frontend/src/utils/Cookies.js","dependencies":[{"path":"/Users/user/Documents/TestProject/Frontend/src/utils/Cookies.js","mtime":1647724083219},{"path":"/Users/user/Documents/TestProject/Frontend/babel.config.js","mtime":1647724083201},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/user/Documents/TestProject/Frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/user/Documents/TestProject/Frontend/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/user/Documents/TestProject/Frontend/node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js\";\nimport Cookies from 'js-cookie';\nimport VueJwtDecode from 'vue-jwt-decode';\nvar TOKEN_NAME = 'token';\n\nvar Utils = /*#__PURE__*/function () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n\n  _createClass(Utils, null, [{\n    key: \"saveToken\",\n    value: function saveToken(token) {\n      if (token) {\n        var decodedToken = VueJwtDecode.decode(token.access);\n        Cookies.set(TOKEN_NAME, token.access);\n        return {\n          decodedToken: decodedToken,\n          token: token\n        };\n      }\n    }\n  }, {\n    key: \"setToken\",\n    value: function setToken(token) {\n      if (token) {\n        var decodedToken = VueJwtDecode.decode(token);\n        Cookies.set(TOKEN_NAME, token);\n        return {\n          decodedToken: decodedToken,\n          token: token\n        };\n      }\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      return Cookies.get(TOKEN_NAME);\n    }\n  }, {\n    key: \"removeToken\",\n    value: function removeToken() {\n      Cookies.remove(TOKEN_NAME);\n    }\n  }, {\n    key: \"authTokenExists\",\n    value: function authTokenExists() {\n      return !!this.getToken(TOKEN_NAME);\n    }\n  }, {\n    key: \"decodeAuthToken\",\n    value: function decodeAuthToken() {\n      var token = this.getToken(TOKEN_NAME);\n      return VueJwtDecode.decode(token);\n    }\n  }]);\n\n  return Utils;\n}();\n\nexport default Utils;",{"version":3,"sources":["/Users/user/Documents/TestProject/Frontend/src/utils/Cookies.js"],"names":["Cookies","VueJwtDecode","TOKEN_NAME","Utils","token","decodedToken","decode","access","set","get","remove","getToken"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,UAAU,GAAG,OAAnB;;IAEMC,K;;;;;;;WACJ,mBAAiBC,KAAjB,EAAwB;AACtB,UAAIA,KAAJ,EAAW;AACT,YAAIC,YAAY,GAAEJ,YAAY,CAACK,MAAb,CAAoBF,KAAK,CAACG,MAA1B,CAAlB;AACAP,QAAAA,OAAO,CAACQ,GAAR,CAAYN,UAAZ,EAAyBE,KAAK,CAACG,MAA/B;AACA,eAAO;AAACF,UAAAA,YAAY,EAAZA,YAAD;AAAeD,UAAAA,KAAK,EAALA;AAAf,SAAP;AACD;AACF;;;WAED,kBAAgBA,KAAhB,EAAuB;AACrB,UAAIA,KAAJ,EAAW;AACT,YAAIC,YAAY,GAAEJ,YAAY,CAACK,MAAb,CAAoBF,KAApB,CAAlB;AACAJ,QAAAA,OAAO,CAACQ,GAAR,CAAYN,UAAZ,EAAyBE,KAAzB;AACA,eAAO;AAACC,UAAAA,YAAY,EAAZA,YAAD;AAAeD,UAAAA,KAAK,EAALA;AAAf,SAAP;AACD;AACF;;;WAED,oBAAkB;AAChB,aAAOJ,OAAO,CAACS,GAAR,CAAYP,UAAZ,CAAP;AACD;;;WAED,uBAAqB;AACnBF,MAAAA,OAAO,CAACU,MAAR,CAAeR,UAAf;AACD;;;WAED,2BAAyB;AACvB,aAAO,CAAC,CAAC,KAAKS,QAAL,CAAcT,UAAd,CAAT;AACD;;;WAED,2BAAyB;AACvB,UAAME,KAAK,GAAG,KAAKO,QAAL,CAAcT,UAAd,CAAd;AACA,aAAOD,YAAY,CAACK,MAAb,CAAoBF,KAApB,CAAP;AACD;;;;;;AAGH,eAAeD,KAAf","sourcesContent":["import Cookies from 'js-cookie'\nimport VueJwtDecode from 'vue-jwt-decode'\n\nconst TOKEN_NAME = 'token';\n\nclass Utils {\n  static saveToken(token) {\n    if (token) {\n      let decodedToken= VueJwtDecode.decode(token.access)\n      Cookies.set(TOKEN_NAME,  token.access)\n      return {decodedToken, token}\n    }\n  }\n\n  static setToken(token) {\n    if (token) {\n      let decodedToken= VueJwtDecode.decode(token)\n      Cookies.set(TOKEN_NAME,  token)\n      return {decodedToken, token}\n    }\n  }\n\n  static getToken() {\n    return Cookies.get(TOKEN_NAME)\n  }\n\n  static removeToken() {\n    Cookies.remove(TOKEN_NAME)\n  }\n\n  static authTokenExists() {\n    return !!this.getToken(TOKEN_NAME)\n  }\n\n  static decodeAuthToken() {\n    const token = this.getToken(TOKEN_NAME)\n    return VueJwtDecode.decode(token)\n  }\n}\n\nexport default Utils;"]}]}